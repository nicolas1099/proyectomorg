---
- name: Install mysql packages
  apt:  
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop: "{{ mysql_packages }}"
  notify: restart_mysql

- name: Copiar template my.cnf
  template: 
    src: my.cnf.j2 
    dest: "{{ mysql_conf_dir }}/my.cnf"
  notify:  restart_mysql


- name: Start the mysql services
  service: 
    name: "{{ mysql_service }}"
    state: started 
    enabled: yes

#Permite mayor compatibilidad con phpmyadmin
- name: Cambiar plugin de mysql
  shell: mysql -u root -e 'UPDATE mysql.user SET plugin="mysql_native_password" WHERE user="root" AND host="localhost"'

- name: aplicar FLUSH
  shell: mysql -u root -e 'FLUSH PRIVILEGES'

- name: update mysql root password for all root accounts
  mysql_user:
    name: 'root' 
    login_user: 'root'
    login_password: ''  
    login_host: 'localhost'
    #host_all: yes #"{{ item }}"
    password: '{{ mysql_root_db_pass }}'
    state: present

## TEMPLATE con las credenciales del usuario ROOT 
- name: copy .my.cnf file with root password credentials
  template: 
    src: .my.cnf.j2 
    dest: /root/.my.cnf 
    mode: 0600

#Quitar los usuarios anonimos de la BBDD
- name: ensure anonymous users are not in the database
  mysql_user: 
    name: ''
    host: "{{ item }}"
    state: absent
  with_items:
   - localhost
   - "{{ ansible_hostname }}"

#Remover los Test de la BBDD
- name: remove the test database
  mysql_db:
    name: test
    state: absent

#Crear la BBDD simpre y cuando mysql_db tenga datos
- name: Create the database
  mysql_db:
    name: "{{ item.name }}"
    state: present
  loop: "{{ mysql_db }}"
  when: mysql_db|lower() != 'none'

- name: Create the database users
  mysql_user:
    name: "{{ item.name }}"
    password: "{{ item.pass }}"
    priv: "{{ item.priv }}"
    state: present
    host: "%"
  loop: 
    - "{{ mysql_users }}"
  when: mysql_users|lower() != 'none'

#Crear directorio de bbdd
- name: Directorio bbdd
  file:
    path: /home/tiendajuegos/bbdd
    state: directory
    mode: '0755'
    owner: tiendajuegos
    group: tiendajuegos

# Descargar brach db donde esta el .sql del proyecto
- name: recuperrar de rama de git
  remote_user: tiendajuegos
  git:
    repo: 'git@github.com:nicolas1099/proyectomorg.git'
    dest: /home/tiendajuegos/bbdd
    key_file: /home/tiendajuegos/.ssh/id_rsa
    #accept_hostkey: yes
    version: db


#Importar .sql a BBDD
- name: Importar .sql
  mysql_db:
    name: "{{ item.name }}"
    state: import
    target: /home/tiendajuegos/bbdd/proyecto.sql
  loop: "{{ mysql_db }}"
    